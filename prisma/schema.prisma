generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URI")
}

model Contact {
  id        Int      @id @default(autoincrement()) @map("id")
  email     String   @map("email")
  message   String   @map("message")
  base64String String?  @map("base_64_string")
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt DateTime @default(now()) @map("updated_at") @db.Timestamp(6)

  @@map("contact")
}

model User {
  id                         Int       @id @default(autoincrement()) @map("id")
  email                      String    @unique @map("email")
  password                   String    @map("password")
  emailVerificationCode      String?   @map("email_verification_code")
  emailVerified              Boolean?  @map("email_verified")
  credits                    Int       @default(0) @map("credits")
  role                       String?   @map("role")
  subscriptionPlanId         String?   @map("subscription_plan_id")
  subscriptionPlanName       String?   @map("subscription_plan_name")
  subscriptionCreditResetDate DateTime? @map("subscription_credit_reset_date") @db.Timestamp(6)
  subscriptionCredits        Int       @default(0) @map("subscription_credits")
  subscriptionActive         Boolean   @default(false) @map("subscription_active")
  createdAt                  DateTime  @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt                  DateTime  @default(now()) @map("updated_at") @db.Timestamp(6)

  @@map("users")
}

model Payments {
  id        Int      @id @default(autoincrement()) @map("id")
  userId    Int      @map("user_id")
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt DateTime @default(now()) @map("updated_at") @db.Timestamp(6)
  paymentId String   @map("payment_id")

  @@map("payments")
}

model Blog {
  id        Int      @id @default(autoincrement()) @map("id")
  title     String   @map("title")
  content   String   @map("content")
  ctaLink   String?  @map("cta_link")
  slug      String?  @map("slug")
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt DateTime @default(now()) @map("updated_at") @db.Timestamp(6)

  @@map("blogs")
}

model File {
  id        Int      @id @default(autoincrement()) @map("id")
  base64String String @map("base_64_string")
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt DateTime @default(now()) @map("updated_at") @db.Timestamp(6)

  // Relations
  userFiles UserFile[]

  @@map("files") 
}

model UserFile {
  id        Int      @id @default(autoincrement()) @map("id")
  userId Int @map("user_id")
  fileId Int @map("file_id")
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt DateTime @default(now()) @map("updated_at") @db.Timestamp(6)

  // Relations
  file File @relation(fields: [fileId], references: [id])

  @@map("user_files") 
}